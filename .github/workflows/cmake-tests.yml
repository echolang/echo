name: Tests

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        build_type: [RelWithDebInfo]

    env:
      BUILD_TYPE: ${{ matrix.build_type }}
      CC: clang-18
      CXX: clang++-18
      CXX_FLAGS: "-stdlib=libc++ -std=c++20"
      USE_CLANG: 1

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup LLVM
      uses: ZhongRuoyu/setup-llvm@v0
      with:
        llvm-version: 18

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y cmake ninja-build

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} --target tests

    - name: Test
      working-directory: ${{github.workspace}}/build
      run: ./tests
    
    - name: Build release
      if: success() # Only build a release binary if previous steps succeeded.
      run: |
        cmake --build ${{github.workspace}}/build --config Release --target echo
        cp ${{github.workspace}}/build/echo ${{github.workspace}}/echo-${{env.BUILD_TYPE}}

    - name: Upload release binary
      uses: actions/upload-artifact@v2
      if: success() # Only upload if previous steps succeeded.
      with:
        name: echo-${{env.BUILD_TYPE}}
        path: ${{github.workspace}}/echo-${{env.BUILD_TYPE}}
