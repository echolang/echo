name: Tests

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

jobs:
  build_and_test:
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        build_type: [RelWithDebInfo]

    env:
      BUILD_TYPE: ${{ matrix.build_type }}
      CC: clang-18
      CXX: clang++-18
      # CXX_FLAGS: "-stdlib=libc++ -std=c++20"
      USE_CLANG: 1

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup LLVM
      uses: ZhongRuoyu/setup-llvm@v0
      with:
        llvm-version: 18

    - name: Install dependencies
      run: |
        sudo apt update
        sudo apt install -y cmake \
          ninja-build \
          libc++-dev \
          libc++abi-dev \
          zlib1g-dev

    - name: Configure CMake
      run: |
        cmake -B build -G Ninja \
          -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} \
          -DCMAKE_C_COMPILER=clang-18 \
          -DCMAKE_CXX_COMPILER=clang++-18

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} --target tests

    - name: Test
      working-directory: ${{github.workspace}}/build
      run: ./tests

  build_release:
    runs-on: ubuntu-24.04
    needs: build_and_test
    env:
      BUILD_TYPE: Release
      CC: clang-18
      CXX: clang++-18
      USE_CLANG: 1
      BIN_NAME: echo-linux-x86_64

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
  
      - name: Setup LLVM
        uses: ZhongRuoyu/setup-llvm@v0
        with:
          llvm-version: 18
  
      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y cmake \
            ninja-build \
            libc++-dev \
            libc++abi-dev \
            zlib1g-dev
  
      - name: Configure CMake
        run: |
          cmake -B build -G Ninja \
            -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} \
            -DCMAKE_C_COMPILER=clang-18 \
            -DCMAKE_CXX_COMPILER=clang++-18
  
      - name: Build release
        run: |
          cmake --build ${{github.workspace}}/build --config Release --target echo
          cp ${{github.workspace}}/build/echo ${{github.workspace}}/${{env.BIN_NAME}}
  
      - name: Upload release binary
        uses: actions/upload-artifact@v2
        with:
          name: ${{env.BIN_NAME}}
          path: ${{github.workspace}}/${{env.BIN_NAME}}

  build_release_macos_x86_64:
    runs-on: macos-14
    needs: build_and_test
    env:
      BUILD_TYPE: Release
      CC: clang
      CXX: clang++
      USE_CLANG: 1
      BIN_NAME: echo-macos-x86_64

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
  
      - name: Setup LLVM
        uses: ZhongRuoyu/setup-llvm@v0
        with:
          llvm-version: 18

      - name: Install dependencies
        run: |
          brew install cmake ninja
  
      - name: Configure CMake
        run: |
          cmake -B build -G Ninja \
            -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} \
            -DCMAKE_C_COMPILER=clang \
            -DCMAKE_CXX_COMPILER=clang++
  
      - name: Build release
        run: |
          cmake --build ${{github.workspace}}/build --config Release --target echo
          cp ${{github.workspace}}/build/echo ${{github.workspace}}/${{env.BIN_NAME}}
  
      - name: Upload release binary
        uses: actions/upload-artifact@v2
        with:
          name: ${{env.BIN_NAME}}
          path: ${{github.workspace}}/${{env.BIN_NAME}}

  # build_release_macos_arm:
  #   runs-on: macos-latest-xlarge
  #   needs: build_and_test
  #   env:
  #     BUILD_TYPE: Release
  #     CC: clang
  #     CXX: clang++
  #     USE_CLANG: 1
  #     BIN_NAME: echo-macos-arm

  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v4
  
  #     - name: Setup LLVM
  #       uses: ZhongRuoyu/setup-llvm@v0
  #       with:
  #         llvm-version: 18
  
  #     - name: Install dependencies
  #       run: |
  #         brew install cmake ninja
  
  #     - name: Configure CMake
  #       run: |
  #         cmake -B build -G Ninja \
  #           -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} \
  #           -DCMAKE_C_COMPILER=clang \
  #           -DCMAKE_CXX_COMPILER=clang++
  
  #     - name: Build release
  #       run: |
  #         cmake --build ${{github.workspace}}/build --config Release --target echo
  #         cp ${{github.workspace}}/build/echo ${{github.workspace}}/${{env.BIN_NAME}}
  
  #     - name: Upload release binary
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: ${{env.BIN_NAME}}
  #         path: ${{github.workspace}}/${{env.BIN_NAME}}

