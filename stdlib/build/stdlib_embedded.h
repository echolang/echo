#include "AST/ASTModule.h"

#include "AST/ASTBundle.h"

namespace EmbeddedModule
{

void load_stdlib_module(AST::Bundle &bundle, AST::Module &module)
{
    auto &file_1 = module.add_file("stdlib:/symbolic/math.eco");
    static const unsigned char file_1_data[] = {
        0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x20, 0x6d, 0x61, 
        0x74, 0x68, 0x3b, 0x0a, 0x0a, 0x2f, 0x2a, 0x2a, 0x0a, 0x20, 0x2a, 0x20, 
        0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x73, 0x20, 0x74, 0x68, 0x65, 0x20, 
        0x73, 0x69, 0x6e, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x61, 0x20, 0x67, 0x69, 
        0x76, 0x65, 0x6e, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x61, 
        0x6c, 0x75, 0x65, 0x2e, 0x0a, 0x20, 0x2a, 0x2f, 0x0a, 0x23, 0x5b, 0x69, 
        0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5d, 0x0a, 0x23, 0x5b, 0x69, 0x6e, 0x74, 
        0x72, 0x69, 0x6e, 0x73, 0x69, 0x63, 0x3a, 0x20, 0x22, 0x6c, 0x6c, 0x76, 
        0x6d, 0x2e, 0x73, 0x69, 0x6e, 0x22, 0x5d, 0x0a, 0x66, 0x75, 0x6e, 0x63, 
        0x74, 0x69, 0x6f, 0x6e, 0x20, 0x73, 0x69, 0x6e, 0x28, 0x66, 0x6c, 0x6f, 
        0x61, 0x74, 0x20, 0x24, 0x78, 0x29, 0x20, 0x3a, 0x20, 0x66, 0x6c, 0x6f, 
        0x61, 0x74, 0x3b, 0x0a, 0x2f, 0x2f, 0x20, 0x66, 0x75, 0x6e, 0x63, 0x74, 
        0x69, 0x6f, 0x6e, 0x20, 0x73, 0x69, 0x6e, 0x28, 0x64, 0x6f, 0x75, 0x62, 
        0x6c, 0x65, 0x20, 0x24, 0x78, 0x29, 0x20, 0x3a, 0x20, 0x64, 0x6f, 0x75, 
        0x62, 0x6c, 0x65, 0x3b, 0x0a, 0x0a, 0x2f, 0x2a, 0x2a, 0x0a, 0x20, 0x2a, 
        0x20, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x73, 0x20, 0x74, 0x68, 0x65, 
        0x20, 0x63, 0x6f, 0x73, 0x69, 0x6e, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x61, 
        0x20, 0x67, 0x69, 0x76, 0x65, 0x6e, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 
        0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x2e, 0x0a, 0x20, 0x2a, 0x2f, 0x0a, 
        0x23, 0x5b, 0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5d, 0x0a, 0x23, 0x5b, 
        0x69, 0x6e, 0x74, 0x72, 0x69, 0x6e, 0x73, 0x69, 0x63, 0x3a, 0x20, 0x22, 
        0x6c, 0x6c, 0x76, 0x6d, 0x2e, 0x63, 0x6f, 0x73, 0x22, 0x5d, 0x0a, 0x66, 
        0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x63, 0x6f, 0x73, 0x28, 
        0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x24, 0x78, 0x29, 0x20, 0x3a, 0x20, 
        0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3b, 0x0a, 0x2f, 0x2f, 0x20, 0x66, 0x75, 
        0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x63, 0x6f, 0x73, 0x28, 0x64, 
        0x6f, 0x75, 0x62, 0x6c, 0x65, 0x20, 0x24, 0x78, 0x29, 0x20, 0x3a, 0x20, 
        0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x3b, 0x0a, 0x0a, 0x2f, 0x2a, 0x2a, 
        0x0a, 0x20, 0x2a, 0x20, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x73, 0x20, 
        0x74, 0x68, 0x65, 0x20, 0x73, 0x71, 0x75, 0x61, 0x72, 0x65, 0x20, 0x72, 
        0x6f, 0x6f, 0x74, 0x20, 0x6f, 0x66, 0x20, 0x61, 0x20, 0x67, 0x69, 0x76, 
        0x65, 0x6e, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x61, 0x6c, 
        0x75, 0x65, 0x2e, 0x0a, 0x20, 0x2a, 0x2f, 0x0a, 0x23, 0x5b, 0x69, 0x6e, 
        0x6c, 0x69, 0x6e, 0x65, 0x5d, 0x0a, 0x23, 0x5b, 0x69, 0x6e, 0x74, 0x72, 
        0x69, 0x6e, 0x73, 0x69, 0x63, 0x3a, 0x20, 0x22, 0x6c, 0x6c, 0x76, 0x6d, 
        0x2e, 0x73, 0x71, 0x72, 0x74, 0x22, 0x5d, 0x0a, 0x66, 0x75, 0x6e, 0x63, 
        0x74, 0x69, 0x6f, 0x6e, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x66, 0x6c, 
        0x6f, 0x61, 0x74, 0x20, 0x24, 0x78, 0x29, 0x20, 0x3a, 0x20, 0x66, 0x6c, 
        0x6f, 0x61, 0x74, 0x3b, 0x0a, 0x2f, 0x2f, 0x20, 0x66, 0x75, 0x6e, 0x63, 
        0x74, 0x69, 0x6f, 0x6e, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x64, 0x6f, 
        0x75, 0x62, 0x6c, 0x65, 0x20, 0x24, 0x78, 0x29, 0x20, 0x3a, 0x20, 0x64, 
        0x6f, 0x75, 0x62, 0x6c, 0x65, 0x3b, 0x0a, 
    };
    file_1.set_content(reinterpret_cast<const char*>(file_1_data), sizeof(file_1_data));
    auto &file_2 = module.add_file("stdlib:/math/functions.eco");
    static const unsigned char file_2_data[] = {
        0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x20, 0x6d, 0x61, 
        0x74, 0x68, 0x3b, 0x0a, 0x0a, 0x2f, 0x2a, 0x2a, 0x0a, 0x20, 0x2a, 0x20, 
        0x43, 0x6c, 0x61, 0x6d, 0x70, 0x73, 0x20, 0x61, 0x20, 0x76, 0x61, 0x6c, 
        0x75, 0x65, 0x20, 0x62, 0x65, 0x74, 0x77, 0x65, 0x65, 0x6e, 0x20, 0x61, 
        0x20, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x20, 0x61, 0x6e, 0x64, 
        0x20, 0x6d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x20, 0x76, 0x61, 0x6c, 
        0x75, 0x65, 0x2e, 0x0a, 0x20, 0x2a, 0x20, 0x0a, 0x20, 0x2a, 0x20, 0x40, 
        0x70, 0x61, 0x72, 0x61, 0x6d, 0x20, 0x24, 0x76, 0x61, 0x6c, 0x75, 0x65, 
        0x20, 0x54, 0x68, 0x65, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x74, 
        0x6f, 0x20, 0x63, 0x6c, 0x61, 0x6d, 0x70, 0x2e, 0x0a, 0x20, 0x2a, 0x20, 
        0x40, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x20, 0x24, 0x6d, 0x69, 0x6e, 0x20, 
        0x54, 0x68, 0x65, 0x20, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x20, 
        0x76, 0x61, 0x6c, 0x75, 0x65, 0x2e, 0x0a, 0x20, 0x2a, 0x20, 0x40, 0x70, 
        0x61, 0x72, 0x61, 0x6d, 0x20, 0x24, 0x6d, 0x61, 0x78, 0x20, 0x54, 0x68, 
        0x65, 0x20, 0x6d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x20, 0x76, 0x61, 
        0x6c, 0x75, 0x65, 0x2e, 0x0a, 0x20, 0x2a, 0x20, 0x0a, 0x20, 0x2a, 0x20, 
        0x40, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x54, 0x68, 0x65, 0x20, 
        0x63, 0x6c, 0x61, 0x6d, 0x70, 0x65, 0x64, 0x20, 0x76, 0x61, 0x6c, 0x75, 
        0x65, 0x2e, 0x0a, 0x20, 0x2a, 0x2f, 0x0a, 0x66, 0x75, 0x6e, 0x63, 0x74, 
        0x69, 0x6f, 0x6e, 0x20, 0x63, 0x6c, 0x61, 0x6d, 0x70, 0x28, 0x66, 0x6c, 
        0x6f, 0x61, 0x74, 0x20, 0x24, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x2c, 0x20, 
        0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x24, 0x6d, 0x69, 0x6e, 0x2c, 0x20, 
        0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x24, 0x6d, 0x61, 0x78, 0x29, 0x20, 
        0x3a, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 
        0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x24, 0x76, 0x61, 0x6c, 0x75, 0x65, 
        0x20, 0x3c, 0x20, 0x24, 0x6d, 0x69, 0x6e, 0x29, 0x20, 0x7b, 0x0a, 0x20, 
        0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 
        0x6e, 0x20, 0x24, 0x6d, 0x69, 0x6e, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 
        0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x24, 0x76, 
        0x61, 0x6c, 0x75, 0x65, 0x20, 0x3e, 0x20, 0x24, 0x6d, 0x61, 0x78, 0x29, 
        0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x72, 
        0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x24, 0x6d, 0x61, 0x78, 0x3b, 0x0a, 
        0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x72, 0x65, 
        0x74, 0x75, 0x72, 0x6e, 0x20, 0x24, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3b, 
        0x0a, 0x7d, 
    };
    file_2.set_content(reinterpret_cast<const char*>(file_2_data), sizeof(file_2_data));
}
}
